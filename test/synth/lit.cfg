# -*- Python -*-

import os
import sys
import re
import platform
import lit.util
import lit.formats

config.name = 'Seahorn'

config.test_format = lit.formats.ShTest(execute_external=False)
config.suffixes = ['.c', '.cpp']
config.excludes = [ # These are no tests
                    'list1_check.c'
                  ]
config.test_source_root = os.path.dirname(__file__)
config.test_exec_root = lit_config.params.get('test_dir', '.')
config.useProgressBar= True
config.showOutput= True
config.timeout=30
config.max_time=30

repositoryRoot = os.path.dirname (os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def addEnv(name):
   if name in os.environ:
      config.environment[name] = os.environ[name]

def isexec (fpath):
    if fpath == None: return False
    return os.path.isfile(fpath) and os.access(fpath, os.X_OK)

def which (cmd):
   return lit.util.which(cmd, config.environment['PATH'])
def getSea ():
   seahorn = None
   if 'SEAHORN' in os.environ:
      seahorn = os.environ ['SEAHORN']
   if seahorn is None or not isexec(seahorn):
      seahorn = which('sea')
   return seahorn
def getZ3 ():
   z3_cmd = None
   if 'Z3' in os.environ:
      z3_cmd = os.environ ['Z3']
   if z3_cmd is None or not isexec(z3_cmd):
      z3_cmd = which('z3')
   return z3_cmd

addEnv('HOME')
addEnv('PWD')
addEnv('C_INCLUDE_PATH')

lit_config.note('Repository root is {}'.format(repositoryRoot))

sea_cmd = getSea()
z3_cmd = getZ3()
if not isexec(sea_cmd):
   lit_config.fatal('Could not find the Seahorn executable')
if not isexec(z3_cmd):
   lit_config.fatal('Cound not find the Z3 executable')

config.substitutions.append(('%sea', sea_cmd))
config.substitutions.append(('%z3', z3_cmd))

## seahorn options here
config.substitutions.append(('%dsa', "--dsa=sea-cs"))
